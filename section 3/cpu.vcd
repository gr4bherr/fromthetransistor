$date
	Sun Jan  8 10:40:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpuTB $end
$var reg 1 ! clk $end
$scope module arm7tdmi $end
$var wire 1 ! clk $end
$var wire 32 " databus [31:0] $end
$var wire 1 # writebackalu $end
$var wire 8 $ shiftbyreg [7:0] $end
$var wire 32 % pcbus [31:0] $end
$var wire 32 & incrinbus [31:0] $end
$var wire 32 ' incrementerbus [31:0] $end
$var wire 8 ( i_shiftval [7:0] $end
$var wire 2 ) i_shifttype [1:0] $end
$var wire 32 * i_shiftby [31:0] $end
$var wire 4 + i_rs [3:0] $end
$var wire 4 , i_rn [3:0] $end
$var wire 4 - i_rm [3:0] $end
$var wire 4 . i_rd [3:0] $end
$var wire 4 / i_opcode [3:0] $end
$var wire 32 0 decodebus [31:0] $end
$var wire 32 1 ctrl [31:0] $end
$var wire 4 2 cpsrflagsout [3:0] $end
$var wire 4 3 bsflagsout [3:0] $end
$var wire 32 4 bbusext [31:0] $end
$var wire 32 5 bbus [31:0] $end
$var wire 4 6 aluflagsout [3:0] $end
$var wire 32 7 alubus [31:0] $end
$var wire 32 8 addressbus [31:0] $end
$var wire 32 9 abus [31:0] $end
$var reg 32 : cycles [31:0] $end
$scope module addressIncrementerModule $end
$var wire 32 ; dataout [31:0] $end
$var wire 1 < increment $end
$var wire 32 = datain [31:0] $end
$upscope $end
$scope module addressRegisterModule $end
$var wire 1 ! clk $end
$var wire 1 > in1on $end
$var wire 32 ? in2 [31:0] $end
$var wire 1 @ in2on $end
$var wire 1 A in3on $end
$var wire 32 B out1 [31:0] $end
$var wire 1 C out1on $end
$var wire 32 D out2 [31:0] $end
$var wire 1 E write $end
$var wire 32 F in3 [31:0] $end
$var wire 32 G in1 [31:0] $end
$var reg 32 H areg [31:0] $end
$upscope $end
$scope module aluModule $end
$var wire 1 I setflags $end
$var wire 4 J opcode [3:0] $end
$var wire 4 K flagsin [3:0] $end
$var wire 32 L datainb [31:0] $end
$var wire 32 M dataina [31:0] $end
$var reg 32 N dataout [31:0] $end
$var reg 4 O flagsout [3:0] $end
$var reg 1 # writeback $end
$upscope $end
$scope module barrelShifterModule $end
$var wire 1 P bimm $end
$var wire 1 Q vimm $end
$var wire 32 R valreg [31:0] $end
$var wire 8 S valimm [7:0] $end
$var wire 2 T type [1:0] $end
$var wire 4 U flagsin [3:0] $end
$var wire 32 V datain [31:0] $end
$var wire 8 W byreg [7:0] $end
$var wire 32 X byimm [31:0] $end
$var reg 32 Y by [31:0] $end
$var reg 32 Z carry [31:0] $end
$var reg 32 [ dataout [31:0] $end
$var reg 4 \ flagsout [3:0] $end
$var reg 32 ] val [31:0] $end
$upscope $end
$scope module dataRegisterModule $end
$var wire 1 ! clk $end
$var wire 32 ^ dataout [31:0] $end
$var wire 1 _ inon $end
$var wire 1 ` outon $end
$var wire 32 a datain [31:0] $end
$var reg 32 b datareg [31:0] $end
$upscope $end
$scope module instructionDecoderModule $end
$var wire 32 c ins [31:0] $end
$var wire 4 d flagsin [3:0] $end
$var reg 32 e control [31:0] $end
$var reg 4 f opcode [3:0] $end
$var reg 4 g rd [3:0] $end
$var reg 4 h rm [3:0] $end
$var reg 4 i rn [3:0] $end
$var reg 4 j rs [3:0] $end
$var reg 32 k shiftby [31:0] $end
$var reg 2 l shifttype [1:0] $end
$var reg 8 m shiftval [7:0] $end
$upscope $end
$scope module instructionRegisterModule $end
$var wire 1 ! clk $end
$var wire 32 n datain [31:0] $end
$var wire 32 o dataout2 [31:0] $end
$var wire 1 p inon $end
$var wire 1 q out1on $end
$var wire 32 r dataout1 [31:0] $end
$var wire 1 s dataou1 $end
$var reg 32 t ireg [31:0] $end
$upscope $end
$scope module memoryModule $end
$var wire 32 u address [31:0] $end
$var wire 1 ! clk $end
$var wire 32 v data [31:0] $end
$var wire 1 w out $end
$var wire 1 x write $end
$var reg 32 y buffer [31:0] $end
$var integer 32 z i [31:0] $end
$upscope $end
$scope module registerBankModule $end
$var wire 32 { abusout [31:0] $end
$var wire 32 | alubusin [31:0] $end
$var wire 32 } bbusout [31:0] $end
$var wire 1 ! clk $end
$var wire 1 ~ cpsrwrite $end
$var wire 4 !" flagsin [3:0] $end
$var wire 1 "" in1on $end
$var wire 1 #" in2on $end
$var wire 32 $" incrbusin [31:0] $end
$var wire 32 %" pcbusout [31:0] $end
$var wire 1 &" pcchange $end
$var wire 4 '" rd [3:0] $end
$var wire 4 (" rm [3:0] $end
$var wire 4 )" rn [3:0] $end
$var wire 4 *" rs [3:0] $end
$var wire 1 +" write $end
$var wire 1 # writeback $end
$var wire 4 ," flagsout [3:0] $end
$var wire 8 -" barrelshifterout [7:0] $end
$var reg 32 ." reg0 [31:0] $end
$var reg 32 /" reg1 [31:0] $end
$var reg 32 0" reg10 [31:0] $end
$var reg 32 1" reg11 [31:0] $end
$var reg 32 2" reg12 [31:0] $end
$var reg 32 3" reg13 [31:0] $end
$var reg 32 4" reg14 [31:0] $end
$var reg 32 5" reg15 [31:0] $end
$var reg 32 6" reg16 [31:0] $end
$var reg 32 7" reg2 [31:0] $end
$var reg 32 8" reg3 [31:0] $end
$var reg 32 9" reg4 [31:0] $end
$var reg 32 :" reg5 [31:0] $end
$var reg 32 ;" reg6 [31:0] $end
$var reg 32 <" reg7 [31:0] $end
$var reg 32 =" reg8 [31:0] $end
$var reg 32 >" reg9 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
b111010011 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
b0 ,"
0+"
bx *"
bx )"
bx ("
bx '"
0&"
bx %"
b100 $"
z#"
z""
bx !"
0~
bx }
bx |
bx {
b1010 z
bx y
0x
1w
bx v
b0 u
bx t
xs
bx r
1q
1p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
b0 e
b0 d
bx c
bx b
bx a
0`
0_
bx ^
bx ]
bx \
bx [
bx Z
b0xxxxxxxx Y
bx X
bx W
bx V
b0 U
bx T
bx S
bx R
0Q
0P
bx O
bx N
bx M
bx L
bx K
bx J
0I
b0 H
bx G
bx F
1E
b0 D
1C
b0 B
0A
1@
b100 ?
0>
b0 =
1<
b100 ;
b0 :
bx 9
b0 8
bx 7
bx 6
bx 5
bx 4
bx 3
b0 2
b0 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
b100 '
b0 &
bx %
bx $
x#
bx "
0!
$end
#10000
b100 8
b100 B
b100 u
b1000 '
b1000 ;
b1000 ?
b1000 $"
b100 &
b100 =
b100 D
b100 H
b11100011101000000000010011111111 "
b11100011101000000000010011111111 ^
b11100011101000000000010011111111 n
b11100011101000000000010011111111 v
b11100011101000000000010011111111 y
1!
#11000
b1 :
#20000
b1000 5"
b1000 %
b1000 F
b1000 %"
0!
#30000
b11111111000000000000000000000000 7
b11111111000000000000000000000000 G
b11111111000000000000000000000000 N
b11111111000000000000000000000000 |
b11111111000000000000000000000000 4
b11111111000000000000000000000000 L
b11111111000000000000000000000000 [
b1 Z
b1000 Y
b11111111 ]
1P
1Q
b10 3
b10 K
b10 \
1#
1s
b1100000000000000000 1
b1100000000000000000 e
b11111111 (
b11111111 S
b11111111 m
b11 )
b11 T
b11 l
b1000 *
b1000 X
b1000 k
b0 .
b0 g
b0 '"
b0 ,
b0 i
b0 )"
b1101 /
b1101 J
b1101 f
b11100001101100000001000100100000 "
b11100001101100000001000100100000 ^
b11100001101100000001000100100000 n
b11100001101100000001000100100000 v
b11100001101100000001000100100000 y
b11100011101000000000010011111111 0
b11100011101000000000010011111111 c
b11100011101000000000010011111111 o
b11100011101000000000010011111111 t
b1000 8
b1000 B
b1000 u
b1100 '
b1100 ;
b1100 ?
b1100 $"
b1000 &
b1000 =
b1000 D
b1000 H
1!
#31000
b10 :
#40000
b1100 5"
b11111111000000000000000000000000 ."
b1100 %
b1100 F
b1100 %"
b11111111000000000000000000000000 9
b11111111000000000000000000000000 M
b11111111000000000000000000000000 {
0!
#50000
b0 6
b0 O
b0 !"
b111111110000000000000000000000 7
b111111110000000000000000000000 G
b111111110000000000000000000000 N
b111111110000000000000000000000 |
b111111110000000000000000000000 4
b111111110000000000000000000000 L
b111111110000000000000000000000 [
b0 3
b0 K
b0 \
b1111111100000000000000000000000 Z
b10 Y
b11111111000000000000000000000000 ]
1~
1I
0Q
0s
b10 *
b10 X
b10 k
b1 )
b1 T
b1 l
b11111111000000000000000000000000 5
b11111111000000000000000000000000 R
b11111111000000000000000000000000 V
b11111111000000000000000000000000 a
b11111111000000000000000000000000 r
b11111111000000000000000000000000 }
b0 -
b0 h
b0 ("
b1 .
b1 g
b1 '"
b10100000000000000000 1
b10100000000000000000 e
b1100 8
b1100 B
b1100 u
b10000 '
b10000 ;
b10000 ?
b10000 $"
b1100 &
b1100 =
b1100 D
b1100 H
b11100001101100000001000100100000 0
b11100001101100000001000100100000 c
b11100001101100000001000100100000 o
b11100001101100000001000100100000 t
b11100001101100000001000000100000 "
b11100001101100000001000000100000 ^
b11100001101100000001000000100000 n
b11100001101100000001000000100000 v
b11100001101100000001000000100000 y
1!
#51000
b11 :
#60000
b10000 5"
b111111110000000000000000000000 /"
b10000 %
b10000 F
b10000 %"
0!
#70000
b0 6
b0 O
b0 !"
b11111111000000000000000000000000 7
b11111111000000000000000000000000 G
b11111111000000000000000000000000 N
b11111111000000000000000000000000 |
b11111111000000000000000000000000 4
b11111111000000000000000000000000 L
b11111111000000000000000000000000 [
b0 Z
b0 Y
b0 *
b0 X
b0 k
b10100000000000000000 1
b10100000000000000000 e
bx "
bx ^
bx n
bx v
bx y
b11100001101100000001000000100000 0
b11100001101100000001000000100000 c
b11100001101100000001000000100000 o
b11100001101100000001000000100000 t
b10000 8
b10000 B
b10000 u
b10100 '
b10100 ;
b10100 ?
b10100 $"
b10000 &
b10000 =
b10000 D
b10000 H
1!
#71000
b100 :
#80000
b10100 5"
b11111111000000000000000000000000 /"
b10100 %
b10100 F
b10100 %"
0!
#90000
bx 7
bx G
bx N
bx |
bx 4
bx L
bx [
b0x0 3
b0x0 K
b0x0 \
bx Z
b0xxxxxxxx Y
0~
0P
0I
xs
b0 1
b0 e
b10100 8
b10100 B
b10100 u
b11000 '
b11000 ;
b11000 ?
b11000 $"
b10100 &
b10100 =
b10100 D
b10100 H
bx 0
bx c
bx o
bx t
1!
#91000
b101 :
#100000
b11000 5"
bx /"
b11000 %
b11000 F
b11000 %"
0!
#110000
b11000 8
b11000 B
b11000 u
b11100 '
b11100 ;
b11100 ?
b11100 $"
b11000 &
b11000 =
b11000 D
b11000 H
1!
#111000
b110 :
#120000
b11100 5"
b11100 %
b11100 F
b11100 %"
0!
#130000
b11100 8
b11100 B
b11100 u
b100000 '
b100000 ;
b100000 ?
b100000 $"
b11100 &
b11100 =
b11100 D
b11100 H
1!
#131000
b111 :
#140000
b100000 5"
b100000 %
b100000 F
b100000 %"
0!
#150000
b100000 8
b100000 B
b100000 u
b100100 '
b100100 ;
b100100 ?
b100100 $"
b100000 &
b100000 =
b100000 D
b100000 H
1!
#151000
b1000 :
#160000
b100100 5"
b100100 %
b100100 F
b100100 %"
0!
#170000
b100100 8
b100100 B
b100100 u
b101000 '
b101000 ;
b101000 ?
b101000 $"
b100100 &
b100100 =
b100100 D
b100100 H
1!
#171000
b1001 :
#180000
b101000 5"
b101000 %
b101000 F
b101000 %"
0!
#190000
b101000 8
b101000 B
b101000 u
b101100 '
b101100 ;
b101100 ?
b101100 $"
b101000 &
b101000 =
b101000 D
b101000 H
1!
#191000
b1010 :
#200000
b101100 5"
b101100 %
b101100 F
b101100 %"
0!
#210000
b101100 8
b101100 B
b101100 u
b110000 '
b110000 ;
b110000 ?
b110000 $"
b101100 &
b101100 =
b101100 D
b101100 H
1!
#211000
b1011 :
#220000
b110000 5"
b110000 %
b110000 F
b110000 %"
0!
#230000
b110000 8
b110000 B
b110000 u
b110100 '
b110100 ;
b110100 ?
b110100 $"
b110000 &
b110000 =
b110000 D
b110000 H
1!
#231000
b1100 :
#240000
b110100 5"
b110100 %
b110100 F
b110100 %"
0!
#250000
b110100 8
b110100 B
b110100 u
b111000 '
b111000 ;
b111000 ?
b111000 $"
b110100 &
b110100 =
b110100 D
b110100 H
1!
#251000
b1101 :
#260000
b111000 5"
b111000 %
b111000 F
b111000 %"
0!
#270000
b111000 8
b111000 B
b111000 u
b111100 '
b111100 ;
b111100 ?
b111100 $"
b111000 &
b111000 =
b111000 D
b111000 H
1!
#271000
b1110 :
#280000
b111100 5"
b111100 %
b111100 F
b111100 %"
0!
#290000
b111100 8
b111100 B
b111100 u
b1000000 '
b1000000 ;
b1000000 ?
b1000000 $"
b111100 &
b111100 =
b111100 D
b111100 H
1!
#291000
b1111 :
#300000
b1000000 5"
b1000000 %
b1000000 F
b1000000 %"
0!
#310000
b1000000 8
b1000000 B
b1000000 u
b1000100 '
b1000100 ;
b1000100 ?
b1000100 $"
b1000000 &
b1000000 =
b1000000 D
b1000000 H
1!
#311000
b10000 :
#320000
b1000100 5"
b1000100 %
b1000100 F
b1000100 %"
0!
#330000
b1000100 8
b1000100 B
b1000100 u
b1001000 '
b1001000 ;
b1001000 ?
b1001000 $"
b1000100 &
b1000100 =
b1000100 D
b1000100 H
1!
#331000
b10001 :
#340000
b1001000 5"
b1001000 %
b1001000 F
b1001000 %"
0!
#350000
b1001000 8
b1001000 B
b1001000 u
b1001100 '
b1001100 ;
b1001100 ?
b1001100 $"
b1001000 &
b1001000 =
b1001000 D
b1001000 H
1!
#351000
b10010 :
#360000
b1001100 5"
b1001100 %
b1001100 F
b1001100 %"
0!
#370000
b1001100 8
b1001100 B
b1001100 u
b1010000 '
b1010000 ;
b1010000 ?
b1010000 $"
b1001100 &
b1001100 =
b1001100 D
b1001100 H
1!
#371000
b10011 :
#380000
b1010000 5"
b1010000 %
b1010000 F
b1010000 %"
0!
#390000
b1010000 8
b1010000 B
b1010000 u
b1010100 '
b1010100 ;
b1010100 ?
b1010100 $"
b1010000 &
b1010000 =
b1010000 D
b1010000 H
1!
#391000
b10100 :
#400000
b1010100 5"
b1010100 %
b1010100 F
b1010100 %"
0!
#410000
b1010100 8
b1010100 B
b1010100 u
b1011000 '
b1011000 ;
b1011000 ?
b1011000 $"
b1010100 &
b1010100 =
b1010100 D
b1010100 H
1!
#411000
b10101 :
#420000
b1011000 5"
b1011000 %
b1011000 F
b1011000 %"
0!
#430000
b1011000 8
b1011000 B
b1011000 u
b1011100 '
b1011100 ;
b1011100 ?
b1011100 $"
b1011000 &
b1011000 =
b1011000 D
b1011000 H
1!
#431000
b10110 :
#440000
b1011100 5"
b1011100 %
b1011100 F
b1011100 %"
0!
#450000
b1011100 8
b1011100 B
b1011100 u
b1100000 '
b1100000 ;
b1100000 ?
b1100000 $"
b1011100 &
b1011100 =
b1011100 D
b1011100 H
1!
#451000
b10111 :
#460000
b1100000 5"
b1100000 %
b1100000 F
b1100000 %"
0!
#470000
b1100000 8
b1100000 B
b1100000 u
b1100100 '
b1100100 ;
b1100100 ?
b1100100 $"
b1100000 &
b1100000 =
b1100000 D
b1100000 H
1!
#471000
b11000 :
#480000
b1100100 5"
b1100100 %
b1100100 F
b1100100 %"
0!
#490000
b1100100 8
b1100100 B
b1100100 u
b1101000 '
b1101000 ;
b1101000 ?
b1101000 $"
b1100100 &
b1100100 =
b1100100 D
b1100100 H
1!
#491000
b11001 :
#500000
b1101000 5"
b1101000 %
b1101000 F
b1101000 %"
0!
