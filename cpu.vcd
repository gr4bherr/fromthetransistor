$date
	Sat Jan  7 12:04:40 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpuTB $end
$var reg 1 ! clk $end
$scope module arm7tdmi $end
$var wire 1 ! clk $end
$var wire 32 " databus [31:0] $end
$var wire 1 # writebackalu $end
$var wire 32 $ shiftbyreg [31:0] $end
$var wire 32 % incrinbus [31:0] $end
$var wire 32 & incrementerbus [31:0] $end
$var wire 32 ' i_shiftval [31:0] $end
$var wire 2 ( i_shifttype [1:0] $end
$var wire 32 ) i_shiftby [31:0] $end
$var wire 4 * i_rs [3:0] $end
$var wire 4 + i_rn [3:0] $end
$var wire 4 , i_rm [3:0] $end
$var wire 4 - i_rd [3:0] $end
$var wire 4 . i_opcode [3:0] $end
$var wire 32 / decodebus [31:0] $end
$var wire 32 0 ctrl [31:0] $end
$var wire 32 1 bbusext [31:0] $end
$var wire 32 2 bbus [31:0] $end
$var wire 32 3 alubus [31:0] $end
$var wire 32 4 addressbus [31:0] $end
$var wire 32 5 abus [31:0] $end
$var reg 32 6 cycles [31:0] $end
$scope module addressIncrementerModule $end
$var wire 32 7 dataout [31:0] $end
$var wire 1 8 increment $end
$var wire 32 9 datain [31:0] $end
$upscope $end
$scope module addressRegisterModule $end
$var wire 1 ! clk $end
$var wire 1 : in1on $end
$var wire 32 ; in2 [31:0] $end
$var wire 1 < in2on $end
$var wire 32 = out1 [31:0] $end
$var wire 1 > out1on $end
$var wire 32 ? out2 [31:0] $end
$var wire 1 @ write $end
$var wire 32 A in1 [31:0] $end
$var reg 32 B areg [31:0] $end
$upscope $end
$scope module aluModule $end
$var wire 4 C opcode [3:0] $end
$var wire 32 D datainb [31:0] $end
$var wire 32 E dataina [31:0] $end
$var reg 1 F c $end
$var reg 32 G dataout [31:0] $end
$var reg 1 # writeback $end
$upscope $end
$scope module barrelShifterModule $end
$var wire 1 H bimm $end
$var wire 1 I vimm $end
$var wire 32 J valreg [31:0] $end
$var wire 32 K valimm [31:0] $end
$var wire 2 L type [1:0] $end
$var wire 32 M datain [31:0] $end
$var wire 32 N byreg [31:0] $end
$var wire 32 O byimm [31:0] $end
$var reg 32 P by [31:0] $end
$var reg 32 Q dataout [31:0] $end
$var reg 32 R val [31:0] $end
$upscope $end
$scope module instructionDecoderModule $end
$var wire 32 S ins [31:0] $end
$var reg 32 T control [31:0] $end
$var reg 4 U opcode [3:0] $end
$var reg 4 V rd [3:0] $end
$var reg 4 W rm [3:0] $end
$var reg 4 X rn [3:0] $end
$var reg 4 Y rs [3:0] $end
$var reg 32 Z shiftby [31:0] $end
$var reg 2 [ shifttype [1:0] $end
$var reg 32 \ shiftval [31:0] $end
$upscope $end
$scope module ipipeModule $end
$var wire 1 ! clk $end
$var wire 32 ] datain [31:0] $end
$var wire 32 ^ dataout2 [31:0] $end
$var wire 1 _ inon $end
$var wire 1 ` out1on $end
$var wire 32 a dataout1 [31:0] $end
$var wire 1 b dataou1 $end
$var reg 32 c ireg [31:0] $end
$upscope $end
$scope module memoryModule $end
$var wire 32 d address [31:0] $end
$var wire 1 ! clk $end
$var wire 32 e data [31:0] $end
$var wire 1 f out $end
$var wire 1 g write $end
$var reg 32 h buffer [31:0] $end
$var integer 32 i i [31:0] $end
$upscope $end
$scope module registerBankModule $end
$var wire 1 ! clk $end
$var wire 32 j in1 [31:0] $end
$var wire 1 k in1on $end
$var wire 32 l in2 [31:0] $end
$var wire 1 m in2on $end
$var wire 32 n out1 [31:0] $end
$var wire 32 o out2 [31:0] $end
$var wire 32 p out3 [31:0] $end
$var wire 1 q pcwrite $end
$var wire 4 r rd [3:0] $end
$var wire 4 s rm [3:0] $end
$var wire 4 t rn [3:0] $end
$var wire 4 u rs [3:0] $end
$var wire 1 v write $end
$var wire 1 # writeback $end
$upscope $end
$scope module writeDataRegisterModule $end
$var wire 1 ! clk $end
$var wire 32 w datain [31:0] $end
$var wire 32 x dataout [31:0] $end
$var wire 1 y inon $end
$var wire 1 z outon $end
$var reg 32 { datareg [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx {
0z
xy
bx x
bx w
xv
bx u
bx t
bx s
bx r
xq
bx p
bx o
bx n
1m
b100 l
1k
bx j
b1010 i
bx h
xg
1f
bx e
b0 d
bx c
xb
bx a
1`
1_
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
xI
xH
bx G
0F
bx E
bx D
bx C
b0 B
bx A
1@
b0 ?
1>
b0 =
1<
b100 ;
x:
b0 9
18
b100 7
b0 6
bx 5
b0 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
b100 &
b0 %
bx $
x#
bx "
0!
$end
#10000
b11100011101000000111111100000110 "
b11100011101000000111111100000110 ]
b11100011101000000111111100000110 e
b11100011101000000111111100000110 x
b11100011101000000111111100000110 h
b100 4
b100 =
b100 d
b1000 &
b1000 7
b1000 ;
b1000 l
b100 %
b100 9
b100 ?
b100 B
1!
#11000
b1 6
#20000
0!
#30000
b11000 3
b11000 A
b11000 G
b11000 j
b11000 1
b11000 D
b11000 Q
b11110 P
b110 R
1H
1I
1#
0b
bx11xxxxxxxxxxxxxxxxx 0
bx11xxxxxxxxxxxxxxxxx T
b110 '
b110 K
b110 \
b11 (
b11 L
b11 [
b11110 )
b11110 O
b11110 Z
b111 -
b111 V
b111 r
b0 +
b0 X
b0 t
b1101 .
b1101 C
b1101 U
b11100011101000000111111100000110 /
b11100011101000000111111100000110 S
b11100011101000000111111100000110 ^
b11100011101000000111111100000110 c
b1000 4
b1000 =
b1000 d
b1100 &
b1100 7
b1100 ;
b1100 l
b1000 %
b1000 9
b1000 ?
b1000 B
b11100011101000000101111100000111 "
b11100011101000000101111100000111 ]
b11100011101000000101111100000111 e
b11100011101000000101111100000111 x
b11100011101000000101111100000111 h
1!
#31000
b10 6
#40000
0!
#50000
b11100 3
b11100 A
b11100 G
b11100 j
b11100 1
b11100 D
b11100 Q
b111 R
1b
b111 '
b111 K
b111 \
b101 -
b101 V
b101 r
b11100011101000000100111100000100 "
b11100011101000000100111100000100 ]
b11100011101000000100111100000100 e
b11100011101000000100111100000100 x
b11100011101000000100111100000100 h
b1100 4
b1100 =
b1100 d
b10000 &
b10000 7
b10000 ;
b10000 l
b1100 %
b1100 9
b1100 ?
b1100 B
b11100011101000000101111100000111 /
b11100011101000000101111100000111 S
b11100011101000000101111100000111 ^
b11100011101000000101111100000111 c
1!
#51000
b11 6
#60000
0!
#70000
b10000 3
b10000 A
b10000 G
b10000 j
b10000 1
b10000 D
b10000 Q
b100 R
0b
b100 '
b100 K
b100 \
b100 -
b100 V
b100 r
b11100011101000000100111100000100 /
b11100011101000000100111100000100 S
b11100011101000000100111100000100 ^
b11100011101000000100111100000100 c
b10000 4
b10000 =
b10000 d
b10100 &
b10100 7
b10100 ;
b10100 l
b10000 %
b10000 9
b10000 ?
b10000 B
b11100011101000000010000000000011 "
b11100011101000000010000000000011 ]
b11100011101000000010000000000011 e
b11100011101000000010000000000011 x
b11100011101000000010000000000011 h
1!
#71000
b100 6
#80000
0!
#90000
b11 3
b11 A
b11 G
b11 j
b11 1
b11 D
b11 Q
b0 P
b11 R
1b
b11 '
b11 K
b11 \
b0 )
b0 O
b0 Z
b10 -
b10 V
b10 r
bx "
bx ]
bx e
bx x
bx h
b10100 4
b10100 =
b10100 d
b11000 &
b11000 7
b11000 ;
b11000 l
b10100 %
b10100 9
b10100 ?
b10100 B
b11100011101000000010000000000011 /
b11100011101000000010000000000011 S
b11100011101000000010000000000011 ^
b11100011101000000010000000000011 c
1!
#91000
b101 6
#100000
0!
#110000
xb
bx /
bx S
bx ^
bx c
b11000 4
b11000 =
b11000 d
b11100 &
b11100 7
b11100 ;
b11100 l
b11000 %
b11000 9
b11000 ?
b11000 B
1!
#111000
b110 6
#120000
0!
#130000
b11100 4
b11100 =
b11100 d
b100000 &
b100000 7
b100000 ;
b100000 l
b11100 %
b11100 9
b11100 ?
b11100 B
1!
#131000
b111 6
#140000
0!
#150000
b100000 4
b100000 =
b100000 d
b100100 &
b100100 7
b100100 ;
b100100 l
b100000 %
b100000 9
b100000 ?
b100000 B
1!
#151000
b1000 6
#160000
0!
#170000
b100100 4
b100100 =
b100100 d
b101000 &
b101000 7
b101000 ;
b101000 l
b100100 %
b100100 9
b100100 ?
b100100 B
1!
#171000
b1001 6
#180000
0!
#190000
b101000 4
b101000 =
b101000 d
b101100 &
b101100 7
b101100 ;
b101100 l
b101000 %
b101000 9
b101000 ?
b101000 B
1!
#191000
b1010 6
#200000
0!
#210000
b101100 4
b101100 =
b101100 d
b110000 &
b110000 7
b110000 ;
b110000 l
b101100 %
b101100 9
b101100 ?
b101100 B
1!
#211000
b1011 6
#220000
0!
#230000
b110000 4
b110000 =
b110000 d
b110100 &
b110100 7
b110100 ;
b110100 l
b110000 %
b110000 9
b110000 ?
b110000 B
1!
#231000
b1100 6
#240000
0!
#250000
b110100 4
b110100 =
b110100 d
b111000 &
b111000 7
b111000 ;
b111000 l
b110100 %
b110100 9
b110100 ?
b110100 B
1!
#251000
b1101 6
#260000
0!
#270000
b111000 4
b111000 =
b111000 d
b111100 &
b111100 7
b111100 ;
b111100 l
b111000 %
b111000 9
b111000 ?
b111000 B
1!
#271000
b1110 6
#280000
0!
#290000
b111100 4
b111100 =
b111100 d
b1000000 &
b1000000 7
b1000000 ;
b1000000 l
b111100 %
b111100 9
b111100 ?
b111100 B
1!
#291000
b1111 6
#300000
0!
#310000
b1000000 4
b1000000 =
b1000000 d
b1000100 &
b1000100 7
b1000100 ;
b1000100 l
b1000000 %
b1000000 9
b1000000 ?
b1000000 B
1!
#311000
b10000 6
#320000
0!
#330000
b1000100 4
b1000100 =
b1000100 d
b1001000 &
b1001000 7
b1001000 ;
b1001000 l
b1000100 %
b1000100 9
b1000100 ?
b1000100 B
1!
#331000
b10001 6
#340000
0!
#350000
b1001000 4
b1001000 =
b1001000 d
b1001100 &
b1001100 7
b1001100 ;
b1001100 l
b1001000 %
b1001000 9
b1001000 ?
b1001000 B
1!
#351000
b10010 6
#360000
0!
#370000
b1001100 4
b1001100 =
b1001100 d
b1010000 &
b1010000 7
b1010000 ;
b1010000 l
b1001100 %
b1001100 9
b1001100 ?
b1001100 B
1!
#371000
b10011 6
#380000
0!
#390000
b1010000 4
b1010000 =
b1010000 d
b1010100 &
b1010100 7
b1010100 ;
b1010100 l
b1010000 %
b1010000 9
b1010000 ?
b1010000 B
1!
#391000
b10100 6
#400000
0!
#410000
b1010100 4
b1010100 =
b1010100 d
b1011000 &
b1011000 7
b1011000 ;
b1011000 l
b1010100 %
b1010100 9
b1010100 ?
b1010100 B
1!
#411000
b10101 6
#420000
0!
#430000
b1011000 4
b1011000 =
b1011000 d
b1011100 &
b1011100 7
b1011100 ;
b1011100 l
b1011000 %
b1011000 9
b1011000 ?
b1011000 B
1!
#431000
b10110 6
#440000
0!
#450000
b1011100 4
b1011100 =
b1011100 d
b1100000 &
b1100000 7
b1100000 ;
b1100000 l
b1011100 %
b1011100 9
b1011100 ?
b1011100 B
1!
#451000
b10111 6
#460000
0!
#470000
b1100000 4
b1100000 =
b1100000 d
b1100100 &
b1100100 7
b1100100 ;
b1100100 l
b1100000 %
b1100000 9
b1100000 ?
b1100000 B
1!
#471000
b11000 6
#480000
0!
#490000
b1100100 4
b1100100 =
b1100100 d
b1101000 &
b1101000 7
b1101000 ;
b1101000 l
b1100100 %
b1100100 9
b1100100 ?
b1100100 B
1!
#491000
b11001 6
#500000
0!
