$date
	Sat Jan  7 16:27:47 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpuTB $end
$var reg 1 ! clk $end
$scope module arm7tdmi $end
$var wire 1 ! clk $end
$var wire 32 " databus [31:0] $end
$var wire 1 # writebackalu $end
$var wire 32 $ shiftbyreg [31:0] $end
$var wire 32 % pcbus [31:0] $end
$var wire 4 & newcpsr [3:0] $end
$var wire 32 ' incrinbus [31:0] $end
$var wire 32 ( incrementerbus [31:0] $end
$var wire 32 ) i_shiftval [31:0] $end
$var wire 2 * i_shifttype [1:0] $end
$var wire 32 + i_shiftby [31:0] $end
$var wire 4 , i_rs [3:0] $end
$var wire 4 - i_rn [3:0] $end
$var wire 4 . i_rm [3:0] $end
$var wire 4 / i_rd [3:0] $end
$var wire 4 0 i_opcode [3:0] $end
$var wire 32 1 decodebus [31:0] $end
$var wire 32 2 ctrl [31:0] $end
$var wire 4 3 cpsr [3:0] $end
$var wire 32 4 bbusext [31:0] $end
$var wire 32 5 bbus [31:0] $end
$var wire 32 6 alubus [31:0] $end
$var wire 32 7 addressbus [31:0] $end
$var wire 32 8 abus [31:0] $end
$var reg 32 9 cycles [31:0] $end
$scope module addressIncrementerModule $end
$var wire 32 : dataout [31:0] $end
$var wire 1 ; increment $end
$var wire 32 < datain [31:0] $end
$upscope $end
$scope module addressRegisterModule $end
$var wire 1 ! clk $end
$var wire 1 = in1on $end
$var wire 32 > in2 [31:0] $end
$var wire 1 ? in2on $end
$var wire 1 @ in3on $end
$var wire 32 A out1 [31:0] $end
$var wire 1 B out1on $end
$var wire 32 C out2 [31:0] $end
$var wire 1 D write $end
$var wire 32 E in3 [31:0] $end
$var wire 32 F in1 [31:0] $end
$var reg 32 G areg [31:0] $end
$upscope $end
$scope module aluModule $end
$var wire 1 H setflags $end
$var wire 4 I opcode [3:0] $end
$var wire 32 J datainb [31:0] $end
$var wire 32 K dataina [31:0] $end
$var wire 4 L cpsrin [3:0] $end
$var reg 1 M c $end
$var reg 4 N cpsrout [3:0] $end
$var reg 32 O dataout [31:0] $end
$var reg 1 # writeback $end
$upscope $end
$scope module barrelShifterModule $end
$var wire 1 P bimm $end
$var wire 1 Q vimm $end
$var wire 32 R valreg [31:0] $end
$var wire 32 S valimm [31:0] $end
$var wire 2 T type [1:0] $end
$var wire 32 U datain [31:0] $end
$var wire 32 V byreg [31:0] $end
$var wire 32 W byimm [31:0] $end
$var reg 32 X by [31:0] $end
$var reg 32 Y dataout [31:0] $end
$var reg 32 Z val [31:0] $end
$upscope $end
$scope module dataRegisterModule $end
$var wire 1 ! clk $end
$var wire 32 [ dataout [31:0] $end
$var wire 1 \ inon $end
$var wire 1 ] outon $end
$var wire 32 ^ datain [31:0] $end
$var reg 32 _ datareg [31:0] $end
$upscope $end
$scope module instructionDecoderModule $end
$var wire 32 ` ins [31:0] $end
$var wire 4 a flags [3:0] $end
$var reg 32 b control [31:0] $end
$var reg 4 c opcode [3:0] $end
$var reg 4 d rd [3:0] $end
$var reg 4 e rm [3:0] $end
$var reg 4 f rn [3:0] $end
$var reg 4 g rs [3:0] $end
$var reg 32 h shiftby [31:0] $end
$var reg 2 i shifttype [1:0] $end
$var reg 32 j shiftval [31:0] $end
$upscope $end
$scope module instructionRegisterModule $end
$var wire 1 ! clk $end
$var wire 32 k datain [31:0] $end
$var wire 32 l dataout2 [31:0] $end
$var wire 1 m inon $end
$var wire 1 n out1on $end
$var wire 32 o dataout1 [31:0] $end
$var wire 1 p dataou1 $end
$var reg 32 q ireg [31:0] $end
$upscope $end
$scope module memoryModule $end
$var wire 32 r address [31:0] $end
$var wire 1 ! clk $end
$var wire 32 s data [31:0] $end
$var wire 1 t out $end
$var wire 1 u write $end
$var reg 32 v buffer [31:0] $end
$var integer 32 w i [31:0] $end
$upscope $end
$scope module registerBankModule $end
$var wire 32 x abusout [31:0] $end
$var wire 32 y alubusin [31:0] $end
$var wire 32 z barrelshifterout [31:0] $end
$var wire 32 { bbusout [31:0] $end
$var wire 1 ! clk $end
$var wire 1 | cpsrwrite $end
$var wire 1 } in1on $end
$var wire 1 ~ in2on $end
$var wire 32 !" incrbusin [31:0] $end
$var wire 32 "" pcbusout [31:0] $end
$var wire 1 #" pcwrite $end
$var wire 4 $" rd [3:0] $end
$var wire 4 %" rm [3:0] $end
$var wire 4 &" rn [3:0] $end
$var wire 4 '" rs [3:0] $end
$var wire 4 (" updatedflags [3:0] $end
$var wire 1 )" write $end
$var wire 1 # writeback $end
$var wire 4 *" flags [3:0] $end
$var reg 32 +" reg0 [31:0] $end
$var reg 32 ," reg1 [31:0] $end
$var reg 32 -" reg10 [31:0] $end
$var reg 32 ." reg11 [31:0] $end
$var reg 32 /" reg12 [31:0] $end
$var reg 32 0" reg13 [31:0] $end
$var reg 32 1" reg14 [31:0] $end
$var reg 32 2" reg15 [31:0] $end
$var reg 32 3" reg16 [31:0] $end
$var reg 32 4" reg2 [31:0] $end
$var reg 32 5" reg3 [31:0] $end
$var reg 32 6" reg4 [31:0] $end
$var reg 32 7" reg5 [31:0] $end
$var reg 32 8" reg6 [31:0] $end
$var reg 32 9" reg7 [31:0] $end
$var reg 32 :" reg8 [31:0] $end
$var reg 32 ;" reg9 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
b111010011 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
b0 *"
x)"
bx ("
bx '"
bx &"
bx %"
bx $"
1#"
bx ""
b100 !"
z~
z}
x|
bx {
bx z
bx y
bx x
b1010 w
bx v
xu
1t
bx s
b0 r
bx q
xp
bx o
1n
1m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
b0 a
bx `
bx _
bx ^
0]
x\
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
xQ
xP
bx O
bx N
0M
b0 L
bx K
bx J
bx I
xH
b0 G
bx F
bx E
1D
b0 C
1B
b0 A
1@
1?
b100 >
x=
b0 <
1;
b100 :
b0 9
bx 8
b0 7
bx 6
bx 5
bx 4
b0 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
b100 (
b0 '
bx &
bx %
bx $
x#
bx "
0!
$end
#10000
b11100011101000000111111100000110 "
b11100011101000000111111100000110 [
b11100011101000000111111100000110 k
b11100011101000000111111100000110 s
b11100011101000000111111100000110 v
b100 7
b100 A
b100 r
b1000 (
b1000 :
b1000 >
b1000 !"
b100 '
b100 <
b100 C
b100 G
1!
#11000
b1 9
#20000
0!
#30000
b11000 6
b11000 F
b11000 O
b11000 y
b11000 4
b11000 J
b11000 Y
b11110 X
b110 Z
1P
1Q
0H
0|
1#
0p
b110 )
b110 S
b110 j
b11 *
b11 T
b11 i
b11110 +
b11110 W
b11110 h
b111 /
b111 d
b111 $"
b0 -
b0 f
b0 &"
bx011xxxxxxxxxxxxxxxxx 2
bx011xxxxxxxxxxxxxxxxx b
b1101 0
b1101 I
b1101 c
b11100011101000000111111100000110 1
b11100011101000000111111100000110 `
b11100011101000000111111100000110 l
b11100011101000000111111100000110 q
b1000 7
b1000 A
b1000 r
b1100 (
b1100 :
b1100 >
b1100 !"
b1000 '
b1000 <
b1000 C
b1000 G
b11100011101000000101111100000111 "
b11100011101000000101111100000111 [
b11100011101000000101111100000111 k
b11100011101000000101111100000111 s
b11100011101000000101111100000111 v
1!
#31000
b10 9
#40000
b1100 2"
b11000 9"
b1100 %
b1100 E
b1100 ""
0!
#50000
b11100 6
b11100 F
b11100 O
b11100 y
b11100 4
b11100 J
b11100 Y
b111 Z
1p
b111 )
b111 S
b111 j
b101 /
b101 d
b101 $"
b11100011101000000100111100000100 "
b11100011101000000100111100000100 [
b11100011101000000100111100000100 k
b11100011101000000100111100000100 s
b11100011101000000100111100000100 v
b1100 7
b1100 A
b1100 r
b10000 (
b10000 :
b10000 >
b10000 !"
b1100 '
b1100 <
b1100 C
b1100 G
b11100011101000000101111100000111 1
b11100011101000000101111100000111 `
b11100011101000000101111100000111 l
b11100011101000000101111100000111 q
1!
#51000
b11 9
#60000
b10000 2"
b11100 7"
b10000 %
b10000 E
b10000 ""
0!
#70000
b10000 6
b10000 F
b10000 O
b10000 y
b10000 4
b10000 J
b10000 Y
b100 Z
0p
b100 )
b100 S
b100 j
b100 /
b100 d
b100 $"
b11100011101000000100111100000100 1
b11100011101000000100111100000100 `
b11100011101000000100111100000100 l
b11100011101000000100111100000100 q
b10000 7
b10000 A
b10000 r
b10100 (
b10100 :
b10100 >
b10100 !"
b10000 '
b10000 <
b10000 C
b10000 G
b11100011101000000010000000000011 "
b11100011101000000010000000000011 [
b11100011101000000010000000000011 k
b11100011101000000010000000000011 s
b11100011101000000010000000000011 v
1!
#71000
b100 9
#80000
b10100 2"
b10000 6"
b10100 %
b10100 E
b10100 ""
0!
#90000
b11 6
b11 F
b11 O
b11 y
b11 4
b11 J
b11 Y
b0 X
b11 Z
1p
b11 )
b11 S
b11 j
b0 +
b0 W
b0 h
b10 /
b10 d
b10 $"
b100001000010000000000101 "
b100001000010000000000101 [
b100001000010000000000101 k
b100001000010000000000101 s
b100001000010000000000101 v
b10100 7
b10100 A
b10100 r
b11000 (
b11000 :
b11000 >
b11000 !"
b10100 '
b10100 <
b10100 C
b10100 G
b11100011101000000010000000000011 1
b11100011101000000010000000000011 `
b11100011101000000010000000000011 l
b11100011101000000010000000000011 q
1!
#91000
b101 9
#100000
b11000 2"
b11 4"
b11000 %
b11000 E
b11000 ""
0!
#110000
b100001000010000000000101 1
b100001000010000000000101 `
b100001000010000000000101 l
b100001000010000000000101 q
b11000 7
b11000 A
b11000 r
b11100 (
b11100 :
b11100 >
b11100 !"
b11000 '
b11000 <
b11000 C
b11000 G
b11100011001101000000000000000011 "
b11100011001101000000000000000011 [
b11100011001101000000000000000011 k
b11100011001101000000000000000011 s
b11100011001101000000000000000011 v
1!
#111000
b110 9
#120000
b11100 2"
b11100 %
b11100 E
b11100 ""
0!
#130000
1H
1|
b0 &
b0 N
b0 ("
0#
bx 6
bx F
bx O
bx y
b0 /
b0 d
b0 $"
b10000 5
b10000 R
b10000 U
b10000 ^
b10000 o
b10000 {
b100 -
b100 f
b100 &"
bx111xxxxxxxxxxxxxxxxx 2
bx111xxxxxxxxxxxxxxxxx b
b1001 0
b1001 I
b1001 c
b11100000010001010100001000110111 "
b11100000010001010100001000110111 [
b11100000010001010100001000110111 k
b11100000010001010100001000110111 s
b11100000010001010100001000110111 v
b11100 7
b11100 A
b11100 r
b100000 (
b100000 :
b100000 >
b100000 !"
b11100 '
b11100 <
b11100 C
b11100 G
b11100011001101000000000000000011 1
b11100011001101000000000000000011 `
b11100011001101000000000000000011 l
b11100011001101000000000000000011 q
1!
#131000
b111 9
#140000
b100000 2"
b100000 %
b100000 E
b100000 ""
0!
#150000
b11100 Z
0Q
b1 4
b1 J
b1 Y
0H
0|
1#
b10111 6
b10111 F
b10111 O
b10111 y
b11 $
b11 V
b11 z
b10 ,
b10 g
b10 '"
b1 *
b1 T
b1 i
b11000 8
b11000 K
b11000 x
b111 .
b111 e
b111 %"
b100 /
b100 d
b100 $"
b11100 5
b11100 R
b11100 U
b11100 ^
b11100 o
b11100 {
b101 -
b101 f
b101 &"
bx001xxxxxxxxxxxxxxxxx 2
bx001xxxxxxxxxxxxxxxxx b
b10 0
b10 I
b10 c
b11100000010001010100001000110111 1
b11100000010001010100001000110111 `
b11100000010001010100001000110111 l
b11100000010001010100001000110111 q
b100000 7
b100000 A
b100000 r
b100100 (
b100100 :
b100100 >
b100100 !"
b100000 '
b100000 <
b100000 C
b100000 G
b11100000010001010100001000000111 "
b11100000010001010100001000000111 [
b11100000010001010100001000000111 k
b11100000010001010100001000000111 s
b11100000010001010100001000000111 v
1!
#151000
b1000 9
#160000
b100100 2"
b10111 6"
b100100 %
b100100 E
b100100 ""
0!
#170000
b11000 6
b11000 F
b11000 O
b11000 y
0P
b0 4
b0 J
b0 Y
b11 X
b100 +
b100 W
b100 h
bx000xxxxxxxxxxxxxxxxx 2
bx000xxxxxxxxxxxxxxxxx b
b0 *
b0 T
b0 i
b11100001101000001111000000001110 "
b11100001101000001111000000001110 [
b11100001101000001111000000001110 k
b11100001101000001111000000001110 s
b11100001101000001111000000001110 v
b100100 7
b100100 A
b100100 r
b101000 (
b101000 :
b101000 >
b101000 !"
b100100 '
b100100 <
b100100 C
b100100 G
b11100000010001010100001000000111 1
b11100000010001010100001000000111 `
b11100000010001010100001000000111 l
b11100000010001010100001000000111 q
1!
#171000
b1001 9
#180000
b101000 2"
b11000 6"
b101000 %
b101000 E
b101000 ""
0!
#190000
bx Z
b0 6
b0 F
b0 O
b0 y
0p
b0 +
b0 W
b0 h
bx 8
bx K
bx x
b1110 .
b1110 e
b1110 %"
b1111 /
b1111 d
b1111 $"
bx 5
bx R
bx U
bx ^
bx o
bx {
b0 -
b0 f
b0 &"
b1101 0
b1101 I
b1101 c
b11100001101000001111000000001110 1
b11100001101000001111000000001110 `
b11100001101000001111000000001110 l
b11100001101000001111000000001110 q
b101000 7
b101000 A
b101000 r
b101100 (
b101100 :
b101100 >
b101100 !"
b101000 '
b101000 <
b101000 C
b101000 G
b11100001101100001111000000001110 "
b11100001101100001111000000001110 [
b11100001101100001111000000001110 k
b11100001101100001111000000001110 s
b11100001101100001111000000001110 v
1!
#191000
b1010 9
#200000
b0 2"
b0 %
b0 E
b0 ""
0!
#210000
b100 &
b100 N
b100 ("
1H
1|
bx100xxxxxxxxxxxxxxxxx 2
bx100xxxxxxxxxxxxxxxxx b
b11100000010001010100001000000111 "
b11100000010001010100001000000111 [
b11100000010001010100001000000111 k
b11100000010001010100001000000111 s
b11100000010001010100001000000111 v
b101100 7
b101100 A
b101100 r
b110000 (
b110000 :
b110000 >
b110000 !"
b101100 '
b101100 <
b101100 C
b101100 G
b11100001101100001111000000001110 1
b11100001101100001111000000001110 `
b11100001101100001111000000001110 l
b11100001101100001111000000001110 q
1!
#211000
b1011 9
#220000
b1000000000000000000000111010011 3"
b100 3
b100 L
b100 a
b100 *"
0!
#230000
b11100 Z
0H
0|
b100 &
b100 N
b100 ("
b11000 6
b11000 F
b11000 O
b11000 y
1p
b100 +
b100 W
b100 h
b11000 8
b11000 K
b11000 x
b111 .
b111 e
b111 %"
b100 /
b100 d
b100 $"
b11100 5
b11100 R
b11100 U
b11100 ^
b11100 o
b11100 {
b101 -
b101 f
b101 &"
bx000xxxxxxxxxxxxxxxxx 2
bx000xxxxxxxxxxxxxxxxx b
b10 0
b10 I
b10 c
b11100000010001010100001000000111 1
b11100000010001010100001000000111 `
b11100000010001010100001000000111 l
b11100000010001010100001000000111 q
b110000 7
b110000 A
b110000 r
b110100 (
b110100 :
b110100 >
b110100 !"
b110000 '
b110000 <
b110000 C
b110000 G
1!
#231000
b1100 9
#240000
b110100 2"
b110100 %
b110100 E
b110100 ""
0!
#250000
b11100000100000010010000111100011 "
b11100000100000010010000111100011 [
b11100000100000010010000111100011 k
b11100000100000010010000111100011 s
b11100000100000010010000111100011 v
b110100 7
b110100 A
b110100 r
b111000 (
b111000 :
b111000 >
b111000 !"
b110100 '
b110100 <
b110100 C
b110100 G
1!
#251000
b1101 9
#260000
b111000 2"
b111000 %
b111000 E
b111000 ""
0!
#270000
bx 4
bx J
bx Y
bx Z
bx 6
bx F
bx O
bx y
b11 +
b11 W
b11 h
b11 *
b11 T
b11 i
bx 8
bx K
bx x
b11 .
b11 e
b11 %"
b10 /
b10 d
b10 $"
bx 5
bx R
bx U
bx ^
bx o
bx {
b1 -
b1 f
b1 &"
b100 0
b100 I
b100 c
b11100000100000010010000111100011 1
b11100000100000010010000111100011 `
b11100000100000010010000111100011 l
b11100000100000010010000111100011 q
b111000 7
b111000 A
b111000 r
b111100 (
b111100 :
b111100 >
b111100 !"
b111000 '
b111000 <
b111000 C
b111000 G
b11100000100000010010000001100011 "
b11100000100000010010000001100011 [
b11100000100000010010000001100011 k
b11100000100000010010000001100011 s
b11100000100000010010000001100011 v
1!
#271000
b1110 9
#280000
b111100 2"
bx 4"
bx X
b111100 %
b111100 E
b111100 ""
bx $
bx V
bx z
0!
#290000
b0 +
b0 W
b0 h
bx "
bx [
bx k
bx s
bx v
b111100 7
b111100 A
b111100 r
b1000000 (
b1000000 :
b1000000 >
b1000000 !"
b111100 '
b111100 <
b111100 C
b111100 G
b11100000100000010010000001100011 1
b11100000100000010010000001100011 `
b11100000100000010010000001100011 l
b11100000100000010010000001100011 q
1!
#291000
b1111 9
#300000
b1000000 2"
b1000000 %
b1000000 E
b1000000 ""
0!
#310000
xp
bx 1
bx `
bx l
bx q
b1000000 7
b1000000 A
b1000000 r
b1000100 (
b1000100 :
b1000100 >
b1000100 !"
b1000000 '
b1000000 <
b1000000 C
b1000000 G
1!
#311000
b10000 9
#320000
b1000100 2"
b1000100 %
b1000100 E
b1000100 ""
0!
#330000
b1000100 7
b1000100 A
b1000100 r
b1001000 (
b1001000 :
b1001000 >
b1001000 !"
b1000100 '
b1000100 <
b1000100 C
b1000100 G
1!
#331000
b10001 9
#340000
b1001000 2"
b1001000 %
b1001000 E
b1001000 ""
0!
#350000
b1001000 7
b1001000 A
b1001000 r
b1001100 (
b1001100 :
b1001100 >
b1001100 !"
b1001000 '
b1001000 <
b1001000 C
b1001000 G
1!
#351000
b10010 9
#360000
b1001100 2"
b1001100 %
b1001100 E
b1001100 ""
0!
#370000
b1001100 7
b1001100 A
b1001100 r
b1010000 (
b1010000 :
b1010000 >
b1010000 !"
b1001100 '
b1001100 <
b1001100 C
b1001100 G
1!
#371000
b10011 9
#380000
b1010000 2"
b1010000 %
b1010000 E
b1010000 ""
0!
#390000
b1010000 7
b1010000 A
b1010000 r
b1010100 (
b1010100 :
b1010100 >
b1010100 !"
b1010000 '
b1010000 <
b1010000 C
b1010000 G
1!
#391000
b10100 9
#400000
b1010100 2"
b1010100 %
b1010100 E
b1010100 ""
0!
#410000
b1010100 7
b1010100 A
b1010100 r
b1011000 (
b1011000 :
b1011000 >
b1011000 !"
b1010100 '
b1010100 <
b1010100 C
b1010100 G
1!
#411000
b10101 9
#420000
b1011000 2"
b1011000 %
b1011000 E
b1011000 ""
0!
#430000
b1011000 7
b1011000 A
b1011000 r
b1011100 (
b1011100 :
b1011100 >
b1011100 !"
b1011000 '
b1011000 <
b1011000 C
b1011000 G
1!
#431000
b10110 9
#440000
b1011100 2"
b1011100 %
b1011100 E
b1011100 ""
0!
#450000
b1011100 7
b1011100 A
b1011100 r
b1100000 (
b1100000 :
b1100000 >
b1100000 !"
b1011100 '
b1011100 <
b1011100 C
b1011100 G
1!
#451000
b10111 9
#460000
b1100000 2"
b1100000 %
b1100000 E
b1100000 ""
0!
#470000
b1100000 7
b1100000 A
b1100000 r
b1100100 (
b1100100 :
b1100100 >
b1100100 !"
b1100000 '
b1100000 <
b1100000 C
b1100000 G
1!
#471000
b11000 9
#480000
b1100100 2"
b1100100 %
b1100100 E
b1100100 ""
0!
#490000
b1100100 7
b1100100 A
b1100100 r
b1101000 (
b1101000 :
b1101000 >
b1101000 !"
b1100100 '
b1100100 <
b1100100 C
b1100100 G
1!
#491000
b11001 9
#500000
b1101000 2"
b1101000 %
b1101000 E
b1101000 ""
0!
